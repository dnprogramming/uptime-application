apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    autopilot.gke.io/resource-adjustment: >-
      {"input":{"containers":[{"name":"uptime-application-api-1"}]},"output":{"containers":[{"limits":{"cpu":"500m","ephemeral-storage":"1Gi","memory":"2Gi"},"requests":{"cpu":"500m","ephemeral-storage":"1Gi","memory":"2Gi"},"name":"uptime-application-api-1"}]},"modified":true}
    autopilot.gke.io/warden-version: 2.8.74
  labels:
    app: api
  managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        'f:spec':
          'f:replicas': {}
      manager: vpa-recommender
      operation: Update
      subresource: scale
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        'f:metadata':
          'f:labels':
            .: {}
            'f:app': {}
        'f:spec':
          'f:progressDeadlineSeconds': {}
          'f:revisionHistoryLimit': {}
          'f:selector': {}
          'f:strategy':
            'f:rollingUpdate':
              .: {}
              'f:maxSurge': {}
              'f:maxUnavailable': {}
            'f:type': {}
          'f:template':
            'f:metadata':
              'f:labels':
                .: {}
                'f:app': {}
            'f:spec':
              'f:containers':
                'k:{"name":"uptime-application-api-1"}':
                  .: {}
                  'f:env':
                    .: {}
                    'k:{"name":"ASPNETCORE_ENVIRONMENT"}':
                      .: {}
                      'f:name': {}
                      'f:valueFrom':
                        .: {}
                        'f:configMapKeyRef': {}
                    'k:{"name":"RedisHostName"}':
                      .: {}
                      'f:name': {}
                      'f:valueFrom':
                        .: {}
                        'f:configMapKeyRef': {}
                    'k:{"name":"RedisPortNumber"}':
                      .: {}
                      'f:name': {}
                      'f:valueFrom':
                        .: {}
                        'f:configMapKeyRef': {}
                    'k:{"name":"SQLPassword"}':
                      .: {}
                      'f:name': {}
                      'f:valueFrom':
                        .: {}
                        'f:configMapKeyRef': {}
                    'k:{"name":"SQLServerDatabase"}':
                      .: {}
                      'f:name': {}
                      'f:valueFrom':
                        .: {}
                        'f:configMapKeyRef': {}
                    'k:{"name":"SQLServerHostname"}':
                      .: {}
                      'f:name': {}
                      'f:valueFrom':
                        .: {}
                        'f:configMapKeyRef': {}
                    'k:{"name":"SQLUserName"}':
                      .: {}
                      'f:name': {}
                      'f:valueFrom':
                        .: {}
                        'f:configMapKeyRef': {}
                    'k:{"name":"SecuredRedisHostName"}':
                      .: {}
                      'f:name': {}
                      'f:valueFrom':
                        .: {}
                        'f:configMapKeyRef': {}
                    'k:{"name":"SecuredRedisPortNumber"}':
                      .: {}
                      'f:name': {}
                      'f:valueFrom':
                        .: {}
                        'f:configMapKeyRef': {}
                    'k:{"name":"SpPassKey"}':
                      .: {}
                      'f:name': {}
                      'f:valueFrom':
                        .: {}
                        'f:configMapKeyRef': {}
                  'f:image': {}
                  'f:imagePullPolicy': {}
                  'f:name': {}
                  'f:resources': {}
                  'f:terminationMessagePath': {}
                  'f:terminationMessagePolicy': {}
              'f:dnsPolicy': {}
              'f:restartPolicy': {}
              'f:schedulerName': {}
              'f:securityContext': {}
              'f:terminationGracePeriodSeconds': {}
      manager: GoogleCloudConsole
      operation: Update
      time: '2024-05-02T03:02:11Z'
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        'f:metadata':
          'f:annotations':
            'f:deployment.kubernetes.io/revision': {}
        'f:status':
          'f:availableReplicas': {}
          'f:conditions':
            .: {}
            'k:{"type":"Available"}':
              .: {}
              'f:lastTransitionTime': {}
              'f:lastUpdateTime': {}
              'f:message': {}
              'f:reason': {}
              'f:status': {}
              'f:type': {}
            'k:{"type":"Progressing"}':
              .: {}
              'f:lastTransitionTime': {}
              'f:lastUpdateTime': {}
              'f:message': {}
              'f:reason': {}
              'f:status': {}
              'f:type': {}
          'f:observedGeneration': {}
          'f:readyReplicas': {}
          'f:replicas': {}
          'f:updatedReplicas': {}
      manager: kube-controller-manager
      operation: Update
      subresource: status
      time: '2024-05-02T03:12:29Z'
  name: api
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: api
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: api
    spec:
      containers:
        - env:
            - name: ASPNETCORE_ENVIRONMENT
              valueFrom:
                configMapKeyRef:
                  key: ASPNETCORE_ENVIRONMENT
                  name: api-config-14iv
            - name: SpPassKey
              valueFrom:
                configMapKeyRef:
                  key: SpPassKey
                  name: api-config-14iv
            - name: RedisHostName
              valueFrom:
                configMapKeyRef:
                  key: RedisHostName
                  name: api-config-14iv
            - name: RedisPortNumber
              valueFrom:
                configMapKeyRef:
                  key: RedisPortNumber
                  name: api-config-14iv
            - name: SecuredRedisHostName
              valueFrom:
                configMapKeyRef:
                  key: SecuredRedisHostName
                  name: api-config-14iv
            - name: SecuredRedisPortNumber
              valueFrom:
                configMapKeyRef:
                  key: SecuredRedisPortNumber
                  name: api-config-14iv
            - name: SQLServerHostname
              valueFrom:
                configMapKeyRef:
                  key: SQLServerHostname
                  name: api-config-14iv
            - name: SQLServerDatabase
              valueFrom:
                configMapKeyRef:
                  key: SQLServerDatabase
                  name: api-config-14iv
            - name: SQLUserName
              valueFrom:
                configMapKeyRef:
                  key: SQLUserName
                  name: api-config-14iv
            - name: SQLPassword
              valueFrom:
                configMapKeyRef:
                  key: SQLPassword
                  name: api-config-14iv
          image: >-
            gcr.io/buoyant-ground-421721/github.com/dnprogramming/uptime-application
          imagePullPolicy: IfNotPresent
          name: uptime-application-api-1
          resources:
            limits:
              cpu: 500m
              ephemeral-storage: 1Gi
              memory: 2Gi
            requests:
              cpu: 500m
              ephemeral-storage: 1Gi
              memory: 2Gi
          securityContext:
            capabilities:
              drop:
                - NET_RAW
      securityContext:
        seccompProfile:
          type: RuntimeDefault
      tolerations:
        - effect: NoSchedule
          key: kubernetes.io/arch
          operator: Equal
          value: amd64
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  labels:
    app: api
  managedFields:
    - apiVersion: autoscaling/v2
      fieldsType: FieldsV1
      fieldsV1:
        'f:metadata':
          'f:labels':
            .: {}
            'f:app': {}
        'f:spec':
          'f:maxReplicas': {}
          'f:metrics': {}
          'f:minReplicas': {}
          'f:scaleTargetRef':
            'f:apiVersion': {}
            'f:kind': {}
            'f:name': {}
      manager: GoogleCloudConsole
      operation: Update
      time: '2024-05-02T03:02:11Z'
    - apiVersion: autoscaling/v2
      fieldsType: FieldsV1
      fieldsV1:
        'f:status':
          'f:conditions':
            .: {}
            'k:{"type":"AbleToScale"}':
              .: {}
              'f:lastTransitionTime': {}
              'f:message': {}
              'f:reason': {}
              'f:status': {}
              'f:type': {}
            'k:{"type":"ScalingActive"}':
              .: {}
              'f:lastTransitionTime': {}
              'f:message': {}
              'f:reason': {}
              'f:status': {}
              'f:type': {}
            'k:{"type":"ScalingLimited"}':
              .: {}
              'f:lastTransitionTime': {}
              'f:message': {}
              'f:reason': {}
              'f:status': {}
              'f:type': {}
          'f:currentMetrics': {}
          'f:currentReplicas': {}
          'f:desiredReplicas': {}
          'f:lastScaleTime': {}
      manager: vpa-recommender
      operation: Update
      subresource: status
      time: '2024-05-02T03:57:51Z'
  name: api-hpa-kt7d
  namespace: default
spec:
  maxReplicas: 5
  metrics:
    - resource:
        name: cpu
        target:
          averageUtilization: 80
          type: Utilization
      type: Resource
  minReplicas: 1
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: api
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    cloud.google.com/neg: '{"ingress":true}'
    cloud.google.com/neg-status: >-
      {"network_endpoint_groups":{"80":"k8s1-3b0dba2d-default-api-service-80-631638b5"},"zones":["us-central1-a","us-central1-b"]}
  finalizers:
    - service.kubernetes.io/load-balancer-cleanup
  labels:
    app: api
  managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        'f:metadata':
          'f:labels':
            .: {}
            'f:app': {}
        'f:spec':
          'f:allocateLoadBalancerNodePorts': {}
          'f:externalTrafficPolicy': {}
          'f:internalTrafficPolicy': {}
          'f:ports':
            .: {}
            'k:{"port":80,"protocol":"TCP"}':
              .: {}
              'f:port': {}
              'f:protocol': {}
              'f:targetPort': {}
          'f:selector': {}
          'f:sessionAffinity': {}
          'f:type': {}
      manager: GoogleCloudConsole
      operation: Update
      time: '2024-05-02T03:31:36Z'
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        'f:metadata':
          'f:finalizers':
            .: {}
            'v:"service.kubernetes.io/load-balancer-cleanup"': {}
        'f:status':
          'f:loadBalancer':
            'f:ingress': {}
      manager: cloud-controller-manager
      operation: Update
      subresource: status
      time: '2024-05-02T03:32:16Z'
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        'f:metadata':
          'f:annotations':
            'f:cloud.google.com/neg-status': {}
      manager: glbc
      operation: Update
      subresource: status
      time: '2024-05-02T03:33:17Z'
  name: api-service
  namespace: default
spec:
  allocateLoadBalancerNodePorts: true
  clusterIP: 34.118.238.141
  clusterIPs:
    - 34.118.238.141
  externalTrafficPolicy: Cluster
  internalTrafficPolicy: Cluster
  ipFamilies:
    - IPv4
  ipFamilyPolicy: SingleStack
  ports:
    - nodePort: 31178
      port: 80
      protocol: TCP
      targetPort: 8080
  selector:
    app: api
  sessionAffinity: None
  type: LoadBalancer
